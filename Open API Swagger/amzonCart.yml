openapi: 3.0.0

info:
  title: AmazonCart
  description: Available products in cart API
  termsOfService: https://www.amazon.in/gp/help/customer/display.html?nodeId=202140280
  
  contact:
    name: Vaibhav Wadje
    email: vaibhav.wadje@mindstix.com
  license:
    name: Amazon cart License
    url: https://www.amazon.in/
  version: 1.0.0
  
servers:
  - url: https://www.amazon.in/
    description: To view amazon
  
paths:

  /productCart:
    description: Show all the products available in cart.
      
    get:
      description: Show list of all products in cart.
      
      responses:
        
        '200':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productCart'
                
        '400':
          description: Invalid ID supplied

        '401':
          description: Unauthorized
        
        '403':
          description: Forbidden

        '404':
          description: Products not found
          
        '405':
          description: Validation exception

        '409':
          description: Conflict
          
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Internal server error"
                  }
                  
        '503':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The application accused via the server is not responding"
                  }
                  
  /product:
    description: Add new product to cart
    
    post:
      description: Add new product to cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productByID'
      
      responses:
        
        '201' :
          description: OK created
          
        '202' :
          description: Accepted
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The request has been accepted for processing, but not been completed"
                  }
                  
        '400' :
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Fill the credentials properly"
                  }
                  
        '401' :
          description: unauthorized
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "authenticate yourself to access that files"
                  }
                  
        '403' :
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "access denied"
                  }
                  
        '409' :
          description: conflict
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Duplicate data with same ID already exists"
                  }
                  
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Internal server error"
                  }
                  
        '503':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The application accused via the server is not responding"
                  }
  
  
  /product/{id}:
    description: Fetch, put, update and delete specific product details based on path parameters
   
    get:
      description: Fetch specific product details.
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: B07S94NGWG
            
      responses:
        
        '200' :
          description: Successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productByID'
      
        '400':
          description: Invalid ID supplied

        '401':
          description: Unauthorized
          
        '404':
          description: Product not found
          
        '405':
          description: Validation exception

        '409':
          description: Conflict
          
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Internal server error"
                  }
                  
        '503':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The application accused via the server is not responding"
                  }
                  
    
    put:
      description: update specific product details
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: B07S94NGWG
            
      responses:
  
        '200' :
          description: Successfully updated the details 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productByID'
        
        '201':
          description: Ok created , It was not present previously
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "New product details inserted successfully"
                  }

        '202':
          description: Accepted

        '204':
          description: No content
        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Fill the credentials properly"
                  }

        '401':
          description: Unauthorized

        '403':
          description: Forbidden

        '404':
          description: Not found

        '405':
          description: Validation exception

        '409':
          description: Conflict
          
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Internal server error"
                  }
                  
        '503':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The application accused via the server is not responding"
                  }
                  
                  
    patch:

      description: update a specific data of a specified entity
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: B07S94NGWG
      
      responses:

        '200' :
          description: Successfully updated the details 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productByID'

        '201':
          description: Ok created , It was not present previously
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "New product details inserted successfully"
                  }

        '202':
          description: Accepted
        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Fill the credentials properly"
                  }

        '401':
          description: Unauthorized

        '403':
          description: Forbidden
                  
        '404':
          description: File not found
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "File not found"
                  }

        '405':
          description: Validation exception

        '409':
          description: Conflict
          
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Internal server error"
                  }
                  
        '503':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The application accused via the server is not responding"
                  }
                  
                  
    delete:

      description: delete product by ID
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: B07S94NGWG
            

      responses:
        
        '200' :
          description: Successfully updated the details 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productByID'

        '202':
          description: Accepted

        '204':
          description: No content

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Fill the credentials properly"
                  }

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Invalid credentials"
                  }
                  
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Access denied"
                  }
                
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Entity not found"
                  }

        '409':
          description: Conflict
          
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "Internal server error"
                  }
                  
        '503':
          description: server unavailable
          content:
            application/json:
              schema:
                type: string
                example:
                  {
                    "message": "The application accused via the server is not responding"
                  }
      
components:

  schemas:
  
    productByID:
      type: object
      properties:
        ProductID:
          type: string
          example: B07S94NGWG
        ProductName: 
          type: string
          example: Lenovo(Ideapad)
          
    productCart:
      type: array
      items:
        properties:
          ProductID:
            type: string
            example: B07S94NGWG
          ProductName: 
            type: string
            example: Lenovo(Ideapad)
            